user                nginx;
worker_processes    auto;
pid                 /var/run/nginx.pid;
load_module         /usr/lib64/nginx/modules/ngx_http_sticky_module.so;

events { worker_connections 1024; }

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  gzip              on;
  gzip_http_version 1.0;
  gzip_proxied      any;
  gzip_min_length   500;
  gzip_disable      "MSIE [1-6]\.";
  gzip_types        text/plain text/xml text/css
                    text/comma-separated-values
                    text/javascript
                    application/x-javascript
                    application/atom+xml;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  ssl_certificate           /disk1/web/ssl/$HOST.pem;
  ssl_certificate_key       /disk1/web/ssl/$HOST.key;
  ssl_session_cache         builtin:1000  shared:SSL:10m;
  ssl_protocols             TLSv1.3 TLSv1.2 TLSv1.1;
  ssl_prefer_server_ciphers on;
  ssl_ciphers               ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;

  proxy_redirect          off;
  proxy_set_header        Host $host;
  proxy_set_header        X-Real-IP $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header        X-Forwarded-Host $server_name;
  proxy_ssl_verify        off;
  proxy_ssl_session_reuse on;

# broker initial connection to CACs connection manager
# via FOSS sticky module (github.com/Refinitiv/nginx-stick-module-ng)
  upstream connection-manager {
    sticky expires=30m; 
    server 10.192.209.6:443 max_fails=2 fail_timeout=5s;
    server 10.192.209.7:443 max_fails=2 fail_timeout=5s;
    server 10.192.209.8:443 max_fails=2 fail_timeout=5s;
   }

# listen for pcoip_client connections, broker to upstream
  server {
    listen 443 ssl;
    location ^~ /pcoip-broker {
      proxy_pass         https://connection-manager/pcoip-broker;
    }
  }

# redirect HTTP to HTTPS (not sure if needed)
  server {
    listen 80;
    return 301 https://$host$request_uri;
   }
}

stream {
  upstream radius {
    server $IP:1828 fail_timeout=5s;
    server $IP:1828 backup;
   }

  server {
    listen 1828 udp;
    proxy_pass radius;
    error_log /var/log/nginx/radius.log;
   }
}
